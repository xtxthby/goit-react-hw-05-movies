{"version":3,"file":"static/js/736.7cf775b9.chunk.js","mappings":"kRACaA,E,QAAMC,GAAAA,IAAH,yC,SCqDhB,EA5Ca,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,IAAaP,GAFlB,OAERG,EAFQ,OAGdC,EAAQD,GAHM,gDAKdK,QAAQC,IAAR,MALc,yDAAH,qDAQfH,GACD,GAAE,CAACN,KAGF,+BAEI,wBACGG,EAAKO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,UAApC,OACR,2BACE,SAAChB,EAAD,CACEiB,IAAG,UAAKH,EAAeI,EAAAA,EAAiBJ,EACpCK,EAAAA,EAAc,SAAWJ,GAG7BK,IAAKL,KAEP,0BACE,0BAAM,YAAc,IAAEA,MAExB,0BACE,0BAAM,eAAiB,IAAEC,OAZpBH,EADD,OAqBnB,C,sNChDDQ,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,uBACvBE,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBK,EADpB,+CADM,uBACrBH,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDAQfG,EAAY,mCAAG,WAAM1B,GAAN,yFACHmB,EAAAA,EAAAA,IAAA,gBACZnB,EADY,oBACOoB,EADP,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZf,EAAY,mCAAG,WAAMP,GAAN,yFACHmB,EAAAA,EAAAA,IAAA,gBACZnB,EADY,4BACeoB,EADf,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,EAAKnB,MALc,2CAAH,sDAOZwB,EAAe,mCAAG,WAAM3B,GAAN,yFACNmB,EAAAA,EAAAA,IAAA,gBACZnB,EADY,4BACeoB,EADf,oBADM,uBACrBE,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDAQ5BG,EAAaE,UAAY,CACvBjB,GAAIkB,IAAAA,OAAAA,YAGNL,EAAgBI,UAAY,CAC1BH,MAAOI,IAAAA,OAAAA,YAGTtB,EAAaqB,UAAY,CACvBjB,GAAIkB,IAAAA,OAAAA,YAGNF,EAAgBC,UAAY,CAC1BjB,GAAIkB,IAAAA,OAAAA,W,8ECzDC,IAAMb,EAAiB,mCACjBC,EAAc,qC","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/Api.js","utils/constants.js"],"sourcesContent":["import styled from 'styled-components'\nexport const Img = styled.img `\n  width: 100px;\n`","\n\n\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastMovie } from 'services/Api';\nimport { BASE_IMAGE_URL, PLACEHOLDER } from 'utils/constants';\nimport { Img } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const cast = await getCastMovie(movieId);\n        setCast(cast);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {\n        <ul>\n          {cast.map(({ id, profile_path, original_name, character }) => (\n            <li key={id}>\n              <Img\n                src={`${profile_path ? BASE_IMAGE_URL + profile_path\n                  : PLACEHOLDER + '?text=' + original_name\n                }`}\n                // src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                alt={original_name}\n              />\n              <p>\n                <span> Actor:</span> {original_name}\n              </p>\n              <p>\n                <span>Character:</span> {character}\n              </p>\n            </li>\n          ))}\n        </ul>\n      }\n    </>\n  );\n};\n\nexport default Cast;\n\n","\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f1b5155c1184f9f972000fc60d38fc3a';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n\ngetMovieById.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\ngetMovieByQuery.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\ngetCastMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\ngetReviewsMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n};","export const BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const PLACEHOLDER = 'https://via.placeholder.com/182x273';"],"names":["Img","styled","movieId","useParams","useState","cast","setCast","useEffect","fetchCast","getCastMovie","console","log","map","id","profile_path","original_name","character","src","BASE_IMAGE_URL","PLACEHOLDER","alt","axios","API_KEY","getTrendingMovies","data","results","getMovieByQuery","query","getMovieById","getReviewsMovie","propTypes","PropTypes"],"sourceRoot":""}