{"version":3,"file":"static/js/559.b677674e.chunk.js","mappings":"wKAoBA,IAfmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMN,GAAYO,GAAE,kBAAaJ,GAAhD,SACGC,KAFID,EADC,KASjB,C,oKCjBYK,EAAcC,EAAAA,GAAAA,MAAH,kMAeXC,EAAeD,EAAAA,GAAAA,OAAH,wN,SCoBzB,EA7Ba,SAAC,GAAyB,IAAvBE,EAAsB,EAAtBA,gBACd,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAYA,OACE,kBAAMC,SAXa,SAAAC,GACnBA,EAAEC,iBAEFN,EAAgB,CAAEE,MAAAA,GACnB,EAOC,WACE,SAACL,EAAD,CACEU,KAAK,OACLC,YAAY,aACZC,WAAS,EACTC,MAAOR,EACPS,SAXqB,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MACtCP,EAASO,EACV,KAWG,SAACX,EAAD,CAAcQ,KAAK,SAASM,UAAWX,EAAvC,SAA8C,aAKnD,E,UCAD,EA3BmB,WACjB,OAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAe0B,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBhB,EAArB,KAiBA,OAfAiB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAeF,EAAaG,IAAI,SACtC,GAAKD,EAAL,CAEA,IAAME,EAAiB,mCAAG,8GAEKC,EAAAA,EAAAA,IAAgBH,GAFrB,OAEhBI,EAFgB,OAGtBR,EAAUQ,GAHY,gDAKtBC,QAAQC,IAAR,MALsB,yDAAH,qDAQvBJ,GAVyB,CAW1B,GAAE,CAACJ,KAGF,iCACE,SAAC,EAAD,CAAMhB,gBAAiBA,IACtBZ,EAAOqC,OAAS,IAAK,SAACC,EAAA,EAAD,CAAYtC,OAAQA,MAG/C,C,sNC5BDuC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,uBACvBE,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAMjBV,EAAe,mCAAG,WAAMnB,GAAN,yFACNyB,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoB1B,EADpB,+CADM,uBACrB4B,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDAQfC,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAAAA,EAAAA,IAAA,gBACZM,EADY,oBACOL,EADP,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZI,EAAY,mCAAG,WAAMD,GAAN,yFACHN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACeL,EADf,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,EAAKK,MALc,2CAAH,sDAOZC,EAAe,mCAAG,WAAMH,GAAN,yFACNN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACeL,EADf,oBADM,uBACrBE,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDAQ5BC,EAAaK,UAAY,CACvB7C,GAAI8C,IAAAA,OAAAA,YAGNjB,EAAgBgB,UAAY,CAC1BnC,MAAOoC,IAAAA,OAAAA,YAGTJ,EAAaG,UAAY,CACvB7C,GAAI8C,IAAAA,OAAAA,YAGNF,EAAgBC,UAAY,CAC1B7C,GAAI8C,IAAAA,OAAAA,W","sources":["components/MoviesList/MoviesList.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","pages/MoviesPage/MoviesPage.jsx","services/Api.js"],"sourcesContent":["\n\nimport { useLocation, Link } from 'react-router-dom';\n\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, original_title }) => (\n        <li key={id}>\n          <Link state={{ from: location }} to={`/movies/${id}`}>\n            {original_title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;","import styled from 'styled-components'\nexport const InputSearch = styled.input`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n\n  padding: 10px 16px;\n\n  color: rgba(0, 0, 0, 0.5);\n\n  background: #fff;\n  border-radius: 4px;\n\n\n`;\n\nexport const ButtonSearch = styled.button`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n\n  margin-left: 12px;\n  padding: 10px 16px;\n\n  color: rgba(0, 0, 0, 0.8);\n\n  background: #fff;\n  border-radius: 4px;\n\n\n`;","\n\n\n\nimport { useState } from 'react';\nimport { InputSearch, ButtonSearch } from './Form.styled';\n\nconst Form = ({ setSearchParams }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ query });\n  };\n\n  const handleSearchParams = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputSearch\n        type=\"text\"\n        placeholder=\"Name movie\"\n        autoFocus\n        value={query}\n        onChange={handleSearchParams}\n      />\n      <ButtonSearch type=\"submit\" disabled={!query}>\n        Search\n      </ButtonSearch>\n    </form>\n  );\n};\n\nexport default Form;","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from 'services/Api';\n\nimport Form from 'components/Form/Form';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const currentQuery = searchParams.get('query');\n    if (!currentQuery) return;\n\n    const fetchMovieByQuery = async () => {\n      try {\n        const movieByQuery = await getMovieByQuery(currentQuery);\n        setMovies(movieByQuery);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchMovieByQuery();\n  }, [searchParams]);\n\n  return (\n    <>\n      <Form setSearchParams={setSearchParams} />\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default MoviesPage;","\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f1b5155c1184f9f972000fc60d38fc3a';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n\ngetMovieById.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\ngetMovieByQuery.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\ngetCastMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\ngetReviewsMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n};"],"names":["movies","location","useLocation","map","id","original_title","state","from","to","InputSearch","styled","ButtonSearch","setSearchParams","useState","query","setQuery","onSubmit","e","preventDefault","type","placeholder","autoFocus","value","onChange","target","disabled","setMovies","useSearchParams","searchParams","useEffect","currentQuery","get","fetchMovieByQuery","getMovieByQuery","movieByQuery","console","log","length","MoviesList","axios","API_KEY","getTrendingMovies","data","results","getMovieById","movieId","getCastMovie","cast","getReviewsMovie","propTypes","PropTypes"],"sourceRoot":""}